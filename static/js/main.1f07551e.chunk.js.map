{"version":3,"sources":["services/utils.ts","components/Page/Page.tsx","components/Pagination/Pagination.tsx","components/ItemList/ItemList.tsx","components/PageSizeSelectList/PageSizeSelectList.tsx","utils.ts","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Page","page","onSelectPage","selectedPage","className","cn","active","href","onClick","Pagination","paginationOption","onPageChange","total","perPage","currentPage","pageCount","Math","ceil","pages","map","isActivePrev","isActiveNext","startVal","disabled","ItemList","items","item","PageSizeSelectList","selectOptions","onSetPaginationOption","value","id","onChange","event","target","option","defaultPaginationValue","PAGE_SIZE_OPTIONS","App","useState","setPaginationOption","fromItem","maxCountItem","toItem","min","prevState","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"gMAAA,SAASA,EAAWC,EAAcC,GAGhC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCEIG,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,oBAAIC,UAAWC,IACb,YACA,CAAEC,OAAQH,IAAiBF,IAF7B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAI,WAAMN,GACVO,QAAS,kBAAMN,EAAaD,IAJ9B,SAMGA,OCdIQ,EAA8B,SAAC,GAGrC,IAFLC,EAEI,EAFJA,iBACAC,EACI,EADJA,aAEQC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,QAASC,EAAgBJ,EAAhBI,YAElBC,EAAYC,KAAKC,KAAKL,EACxBC,GAEEK,EFNCxB,EEMgB,EAAGqB,GFNEI,KAAI,SAAArB,GAAC,OAAIA,KEQ/BsB,EAA+B,IAAhBN,EACfO,EAAeP,IAAgBC,EAC/BO,EAAWR,EAcjB,OACE,qBAAIV,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEkB,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRhB,UAAU,YACVG,KAAK,QACL,gBAAea,EACfZ,QAlBkB,WACpBM,EAAc,GAChBH,EAAaW,EAAW,IAWtB,oBAWDJ,EAAMC,KAAI,SAAAlB,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNE,aAAcW,EACdZ,aAAcS,GAHTV,MAOT,oBAAIG,UAAWC,IACb,YACA,CAAEkB,SAAUF,IAFd,SAKE,mBACE,UAAQ,WACRjB,UAAU,YACVG,KAAK,QACL,gBAAec,EACfb,QAjDkB,WACpBM,EAAcC,GAChBJ,EAAaW,EAAW,IA0CtB,wBCjEKE,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMN,KAAI,SAAAO,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCDnBC,EAAsC,SAAC,GAI7C,IAHLC,EAGI,EAHJA,cACAlB,EAEI,EAFJA,iBACAmB,EACI,EADJA,sBAEA,OACE,wBACEC,MAAOpB,EAAiBG,QACxB,UAAQ,kBACRkB,GAAG,kBACH3B,UAAU,eACV4B,SAAU,SAACC,GAAD,OAAWJ,EAAsBI,EAAMC,OAAOJ,QAL1D,SAOGF,EAAcT,KAAI,SAAAgB,GAAM,OACvB,wBAAqBL,MAAOK,EAA5B,SAAqCA,GAAxBA,SCvBRC,EACJ,GADIA,EAEF,EAFEA,EAGE,ECMTC,EAAoB,CAAC,EAAG,EAAG,GAAI,IAExBC,EAAgB,WAC3B,MAAgDC,mBAAS,CACvD3B,MAAOwB,EACPvB,QAASuB,EACTtB,YAAasB,IAHf,mBAAO1B,EAAP,KAAyB8B,EAAzB,KAeMC,IAA4B,OAAhB/B,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBI,aAAc,GAC9CJ,EAAiBG,QAAU,EAEzB6B,GAA+B,OAAhBhC,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBI,aAAcJ,EAAiBG,QAEhE8B,EAAS3B,KAAK4B,IAAIF,EAAcN,GAEhCX,ENvBC/B,EMuBgB+C,EAAUE,GNvBLxB,KAAI,SAAArB,GAAC,qBAAYA,MMmC7C,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EAAiBI,YAD5B,mBACkD2B,EADlD,cACgEE,EADhE,eAC6EjC,EAAiBE,MAD9F,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CACEwB,cAAeS,EACf3B,iBAAkBA,EAClBmB,sBAvBwB,SAACC,GACjCU,GAAoB,SAACK,GACnB,OAAO,2BACFA,GADL,IAEEhC,SAAUiB,EACVhB,YAAasB,YAsBb,uBAAOU,QAAQ,kBAAkB1C,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEM,iBAAkBA,EAClBC,aApDoB,SAACmB,GAAD,OAAmBU,GAC3C,SAACK,GACC,OAAO,2BACFA,GADL,IAEE/B,YAAagB,UAmDf,cAAC,EAAD,CAAUL,MAAOA,QCtEvBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1f07551e.chunk.js","sourcesContent":["function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getItems(from: number, to: number): string[] {\n  return getNumbers(from, to).map(n => `Item ${n}`);\n}\n\nexport function getPages(from: number, to: number): number[] {\n  return getNumbers(from, to).map(n => n);\n}\n","import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  page: number,\n  selectedPage: number,\n  onSelectPage: (value: number) => void,\n};\n\nexport const Page: React.FC<Props> = ({\n  page,\n  onSelectPage,\n  selectedPage,\n}) => {\n  return (\n    <li className={cn(\n      'page-item',\n      { active: selectedPage === page },\n    )}\n    >\n      <a\n        data-cy=\"pageLink\"\n        className=\"page-link\"\n        href={`#${page}`}\n        onClick={() => onSelectPage(page)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PaginationOption } from '../../types/PaginationOption';\nimport { getPages } from '../../services/utils';\nimport { Page } from '../Page';\n\ntype Props = {\n  paginationOption: PaginationOption,\n  onPageChange: (value: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  paginationOption,\n  onPageChange,\n}) => {\n  const { total, perPage, currentPage } = paginationOption;\n\n  const pageCount = Math.ceil(total\n    / perPage);\n\n  const pages = getPages(1, pageCount);\n\n  const isActivePrev = currentPage === 1;\n  const isActiveNext = currentPage === pageCount;\n  const startVal = currentPage;\n\n  const onNextPageHandler = () => {\n    if (currentPage < pageCount) {\n      onPageChange(startVal + 1);\n    }\n  };\n\n  const onPrevPageHandler = () => {\n    if (currentPage > 1) {\n      onPageChange(startVal - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isActivePrev },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isActivePrev}\n          onClick={onPrevPageHandler}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <Page\n          key={page}\n          page={page}\n          selectedPage={currentPage}\n          onSelectPage={onPageChange}\n        />\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: isActiveNext },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isActiveNext}\n          onClick={onNextPageHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  items: string[],\n};\n\nexport const ItemList: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { PaginationOption } from '../../types/PaginationOption';\n\ntype Props = {\n  selectOptions: number[],\n  paginationOption: PaginationOption,\n  onSetPaginationOption: (value: string) => void,\n};\n\nexport const PageSizeSelectList: React.FC<Props> = ({\n  selectOptions,\n  paginationOption,\n  onSetPaginationOption,\n}) => {\n  return (\n    <select\n      value={paginationOption.perPage}\n      data-cy=\"perPageSelector\"\n      id=\"perPageSelector\"\n      className=\"form-control\"\n      onChange={(event) => onSetPaginationOption(event.target.value)}\n    >\n      {selectOptions.map(option => (\n        <option key={option} value={option}>{option}</option>\n      ))}\n    </select>\n  );\n};\n","export const defaultPaginationValue = {\n  total: 42,\n  perPage: 5,\n  currentPage: 1,\n};\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport { getItems } from './services/utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemList } from './components/ItemList';\nimport { PageSizeSelectList } from './components/PageSizeSelectList';\nimport { defaultPaginationValue } from './utils';\n\nconst PAGE_SIZE_OPTIONS = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [paginationOption, setPaginationOption] = useState({\n    total: defaultPaginationValue.total,\n    perPage: defaultPaginationValue.perPage,\n    currentPage: defaultPaginationValue.currentPage,\n  });\n\n  const handleCurrentPage = (value: number) => setPaginationOption(\n    (prevState) => {\n      return {\n        ...prevState,\n        currentPage: value,\n      };\n    },\n  );\n\n  const fromItem = (paginationOption?.currentPage - 1)\n    * paginationOption.perPage + 1;\n\n  const maxCountItem = paginationOption?.currentPage * paginationOption.perPage;\n\n  const toItem = Math.min(maxCountItem, defaultPaginationValue.total);\n\n  const items = getItems(fromItem, toItem);\n\n  const handleSetPaginationOption = (value: string) => {\n    setPaginationOption((prevState) => {\n      return {\n        ...prevState,\n        perPage: +value,\n        currentPage: defaultPaginationValue.currentPage,\n      };\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${paginationOption.currentPage} (items ${fromItem} - ${toItem} of ${paginationOption.total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <PageSizeSelectList\n            selectOptions={PAGE_SIZE_OPTIONS}\n            paginationOption={paginationOption}\n            onSetPaginationOption={handleSetPaginationOption}\n          />\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        paginationOption={paginationOption}\n        onPageChange={handleCurrentPage}\n      />\n\n      <ItemList items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}