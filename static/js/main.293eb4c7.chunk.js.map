{"version":3,"sources":["utils.ts","components/Page/Page.tsx","components/Pagination/Pagination.tsx","components/ItemInfo/ItemInfo.tsx","components/ItemList/ItemList.tsx","components/PerPageOption/PerPageOption.tsx","components/PerPageList/PerPageList.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Page","page","onSelectPage","selectedPage","className","cn","active","href","onClick","Pagination","paginationOption","onPageChange","pageCount","Math","ceil","total","perPage","pages","map","isActivePrev","currentPage","isActiveNext","startVal","disabled","ItemInfo","item","ItemList","items","PerPageOption","option","value","PerPageList","selectOptions","onChangePaginationOption","id","onChange","event","target","defaultPaginVal","options","App","useState","setPaginationOption","fromItem","maxCountItem","toItem","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.293eb4c7.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  page: number,\n  selectedPage: number,\n  onSelectPage: (value: number) => void,\n};\n\nexport const Page: React.FC<Props> = ({\n  page,\n  onSelectPage,\n  selectedPage,\n}) => {\n  return (\n    <li className={cn(\n      'page-item',\n      { active: selectedPage === page },\n    )}\n    >\n      <a\n        data-cy=\"pageLink\"\n        className=\"page-link\"\n        href={`#${page}`}\n        onClick={() => onSelectPage(page)}\n      >\n        {page}\n      </a>\n    </li>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PaginationOption } from '../../types/PaginationOption';\nimport { getNumbers } from '../../utils';\nimport { Page } from '../Page';\n\ntype Props = {\n  paginationOption: PaginationOption,\n  onPageChange: (value: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  paginationOption,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(paginationOption.total\n    / paginationOption.perPage);\n\n  const pages = getNumbers(1, pageCount).map(n => n);\n\n  const isActivePrev = paginationOption.currentPage === 1;\n  const isActiveNext = paginationOption.currentPage === pageCount;\n  const startVal = paginationOption.currentPage;\n\n  const onNextPageHandler = () => {\n    if (paginationOption.currentPage < pageCount) {\n      onPageChange(startVal + 1);\n    }\n  };\n\n  const onPrevPageHandler = () => {\n    if (paginationOption.currentPage > 1) {\n      onPageChange(startVal - 1);\n    }\n  };\n\n  return (\n    <ul\n      className=\"pagination\"\n    >\n      <li className={cn(\n        'page-item',\n        { disabled: isActivePrev },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isActivePrev}\n          onClick={onPrevPageHandler}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <Page\n          key={page}\n          page={page}\n          selectedPage={paginationOption.currentPage}\n          onSelectPage={onPageChange}\n        />\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: isActiveNext },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isActiveNext}\n          onClick={onNextPageHandler}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  item: string,\n};\n\nexport const ItemInfo: React.FC<Props> = ({ item }) => {\n  return (\n    <li data-cy=\"item\">\n      {item}\n    </li>\n  );\n};\n","import React from 'react';\nimport { ItemInfo } from '../ItemInfo';\n\ntype Props = {\n  items: string[],\n};\n\nexport const ItemList: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <ItemInfo key={item} item={item} />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  option: number,\n};\n\nexport const PerPageOption: React.FC<Props> = ({ option }) => {\n  return (\n    <option value={option}>{option}</option>\n  );\n};\n","import React from 'react';\nimport { PerPageOption } from '../PerPageOption';\nimport { PaginationOption } from '../../types/PaginationOption';\n\ntype Props = {\n  selectOptions: number[],\n  paginationOption: PaginationOption,\n  onChangePaginationOption: (value: string) => void,\n};\n\nexport const PerPageList: React.FC<Props> = ({\n  selectOptions,\n  paginationOption,\n  onChangePaginationOption,\n}) => {\n  return (\n    <select\n      value={paginationOption.perPage}\n      data-cy=\"perPageSelector\"\n      id=\"perPageSelector\"\n      className=\"form-control\"\n      onChange={(event) => onChangePaginationOption(event.target.value)}\n    >\n      {selectOptions.map(option => (\n        <PerPageOption\n          key={option}\n          option={option}\n        />\n      ))}\n    </select>\n  );\n};\n","import React, { useState } from 'react';\n\n// import { createBrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemList } from './components/ItemList';\nimport { PerPageList } from './components/PerPageList';\n\nconst defaultPaginVal = {\n  total: 42,\n  perPage: 5,\n  currentPage: 1,\n};\n\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [paginationOption, setPaginationOption] = useState({\n    total: defaultPaginVal.total,\n    perPage: defaultPaginVal.perPage,\n    currentPage: defaultPaginVal.currentPage,\n  });\n\n  const itemPerPageHandler = (value: string) => setPaginationOption({\n    ...paginationOption,\n    ...{ perPage: +value, currentPage: defaultPaginVal.currentPage },\n  });\n\n  const currentPageHandler = (value: number) => setPaginationOption({\n    ...paginationOption, ...{ currentPage: value },\n  });\n\n  const fromItem = (paginationOption?.currentPage - 1)\n    * paginationOption.perPage + 1;\n\n  const maxCountItem = paginationOption?.currentPage * paginationOption.perPage;\n\n  const toItem = maxCountItem\n    > defaultPaginVal.total\n    ? defaultPaginVal.total\n    : maxCountItem;\n\n  const items = getNumbers(fromItem, toItem)\n    .map(n => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${paginationOption.currentPage} (items ${fromItem} - ${toItem} of ${paginationOption.total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <PerPageList\n            selectOptions={options}\n            paginationOption={paginationOption}\n            onChangePaginationOption={itemPerPageHandler}\n          />\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        paginationOption={paginationOption}\n        onPageChange={currentPageHandler}\n      />\n\n      <ItemList items={items} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}